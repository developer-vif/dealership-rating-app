services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: dealership_db
    environment:
      POSTGRES_DB: dealership_ratings
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/startup.sql:/docker-entrypoint-initdb.d/01-startup.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: dealership_cache
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    image: node:18-alpine
    container_name: dealership_api
    working_dir: /app
    env_file:
      - ./backend/.env
    environment:
      FRONTEND_URL: https://orcr-agad.com
    expose:
      - "3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: sh -c "npm install && npm run dev"

  # Frontend
  frontend:
    image: node:18-alpine
    container_name: dealership_web
    working_dir: /app
    environment:
      REACT_APP_API_URL: https://orcr-agad.com
      REACT_APP_GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      REACT_APP_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      REACT_APP_RECAPTCHA_SITE_KEY: ${REACT_APP_RECAPTCHA_SITE_KEY}
    expose:
      - "3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run build && npx serve -s build -l 3000"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: dealership_nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH:-./nginx/ssl/orcr-agad.com.crt}:/etc/ssl/certs/orcr-agad.com.crt:ro
      - ${SSL_KEY_PATH:-./nginx/ssl/orcr-agad.com.key}:/etc/ssl/private/orcr-agad.com.key:ro
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge